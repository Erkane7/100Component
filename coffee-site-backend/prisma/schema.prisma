// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int        @id @default(autoincrement())
  email              String     @unique
  password           String
  username           String     @unique
  recievedDonations  Donation[] @relation("RecievedDonations")
  givenDonations     Donation[] @relation("GivenDonations")
  profile             Profile?
  profileId           Int?
  bankCard           BankCard?
  timestamps DateTime @default(now())
}
model Profile {
  id              Int      @id @default(autoincrement())
  name            String
  about           String?
  avatarImage     String?
  backgroundImage String?
  successMessage  String?
  socialMediaURL  String?
  user            User     @relation(fields: [userId], references: [id])
  userId          Int      @unique
  timestamps      DateTime @default(now())
}


model BankCard {
  id         Int      @id @default(autoincrement())
  country    String
  firstName  String
  lastName   String
  cardNumber String   @unique
  expiryDate DateTime
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  timestamps DateTime @default(now())
}

model Donation {
  id                    Int      @id @default(autoincrement())
  amount                Int
  specialMessage        String?
  socialURIOrBuyMeCoffee String?
  donorId               Int
  recipientId           Int
  donor                 User     @relation("GivenDonations", fields: [donorId], references: [id])
  recipient             User     @relation("RecievedDonations", fields: [recipientId], references: [id])
  timestamps            DateTime @default(now())
}


